server.port=8282

app.kafka.consumer.topics=${APP_KAFKA_CONSUMER_TOPICS:person}

app.kafka.dlt.retry.topics=3
app.kafka.dlt.retry.topics.pattern=${app.kafka.consumer.topics}-[0-9]+

app.kafka.dlt.retry.max.wait.ms=20000
app.kafka.dlt.retry.min.bytes=52428800

app.kafka.dlt.retry.topic.first=${app.kafka.consumer.topics}-1
app.kafka.dlt.topic=${app.kafka.consumer.topics}-dlt

app.kafka.dlt.exceptions.recovered[0]=java.net.ConnectException
app.kafka.dlt.exceptions.recovered[1]=java.net.UnknownHostException

app.kafka.dlt.exceptions.notRecovered[0]=org.apache.avro.AvroMissingFieldException
app.kafka.dlt.exceptions.notRecovered[1]=java.lang.NullPointerException

spring.kafka.listener.missing-topics-fatal=${KAFKA_FAIL_WHEN_MISSING_TOPICS:false}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
spring.kafka.properties.schema.registry.url=${SCHEMA_REGISTRY_URL:http://localhost:8081}

#spring.kafka.consumer.client-id=${KAFKA_CLIENT_ID:wesleyosantos91}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:person-consumer-group-id}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.specific.avro.reader=true

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.acks=1
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.properties.auto.register.schemas=true
